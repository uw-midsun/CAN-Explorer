name: CI

on:
  # Run on all pull requests and all pushes to main
  push:
    branches: [ main ]
  pull_request:

  # Allow running this workflow manually
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'

      - uses: actions/setup-node@v2
        with:
          node-version: '15'

      - name: Install pipenv
        run: |
          pip3 install --user pipenv
          pip3 install --user pylint
          pip3 install --user pylint-django
          pip3 install --user autopep8

      - name: Setup vcan
        run : |
          sudo apt-get install linux-modules-extra-$(uname -r)
          sudo modprobe vcan && sudo ip link add dev vcan0 type vcan && sudo ip link set up vcan0

      - name: Setup Redis
        run: |
          sudo add-apt-repository ppa:chris-lea/redis-server -y
          sudo apt-get update
          sudo apt -y install redis-server
          sudo sed -i "s/^supervised.*/supervised systemd/" /etc/redis/redis.conf
          printf "[Unit]\nDescription=Advanced key-value store\nAfter=network.target\nDocumentation=http://redis.io/documentation, man:redis-server(1)\n\n[Service]\nType=forking\nExecStart=/usr/bin/redis-server /etc/redis/redis.conf\nExecStop=/bin/kill -s TERM $MAINPID\nExecStartPost=/bin/sh -c 'echo $MAINPID > /var/run/redis/redis.pid'\nPIDFile=/run/redis/redis-server.pid\nTimeoutStopSec=0\nRestart=always\nUser=redis\nGroup=redis\nRuntimeDirectory=redis\nRuntimeDirectoryMode=2755\n\nUMask=007\nPrivateTmp=yes\nLimitNOFILE=65535\nPrivateDevices=yes\nProtectHome=yes\nReadOnlyDirectories=/\nReadWriteDirectories=-/var/lib/redis\nReadWriteDirectories=-/var/log/redis\nReadWriteDirectories=-/var/run/redis\n\nNoNewPrivileges=true\nCapabilityBoundingSet=CAP_SETGID CAP_SETUID CAP_SYS_RESOURCE\nRestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX\nMemoryDenyWriteExecute=true\nProtectKernelModules=true\nProtectKernelTunables=true\nProtectControlGroups=true\nRestrictRealtime=true\nRestrictNamespaces=true\n\n# redis-server can write to its own config file when in cluster mode so we\n# permit writing there by default. If you are not using this feature, it is\n# recommended that you replace the following lines with "ProtectSystem=full".\nProtectSystem=true\nReadWriteDirectories=-/etc/redis\n\n[Install]\nWantedBy=multi-user.target\nAlias=redis.service" | sudo tee /etc/systemd/system/redis.service
      
      - name: Setup Mongo
        run: |
          wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list

          sudo apt-get update
          sudo apt-get install -y mongodb-org

          echo "mongodb-org hold" | sudo dpkg --set-selections
          echo "mongodb-org-server hold" | sudo dpkg --set-selections
          echo "mongodb-org-shell hold" | sudo dpkg --set-selections
          echo "mongodb-org-mongos hold" | sudo dpkg --set-selections
          echo "mongodb-org-tools hold" | sudo dpkg --set-selections

      - name: Install backend dependencies 
        run: |
          cd api
          pipenv install
          cd ..

      - name: Backend linting + tests
        run : |
          cd api
          pipenv shell
          pylint *.py --load-plugins pylint_django
          pipenv run tests
          cd ..

      - name: Install frontend dependencies
        run: |
          cd client 
          npm install
          cd ..

      - name: Frontend linting + tests
        run: |
          cd client  
          cd ..

